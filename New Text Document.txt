#include <windows.h>  //for MS Windows
#include <GL/glut.h>  //GLUT, include glu.h and gl.h

void d_line(int x,int y,int sizes,int num){
    for (int a=x,b=y,c=0;c<num ;c++,a+=sizes)
    {
        glBegin(GL_POLYGON);
        glVertex2i(a,b);
        glVertex2i(a+sizes,b);
        glVertex2i(a+sizes,b+sizes);
        glVertex2i(a,b+sizes);
        glEnd();
    }
}
void vertical_line(int x,int y,int sizes,int num){
    for (int a=x,b=y,c=0; c<num;c++,b+=sizes)
    {
        glBegin(GL_POLYGON);
        glVertex2i(a,b);
        glVertex2i(a+sizes,b);
        glVertex2i(a+sizes,b+sizes);
        glVertex2i(a,b+sizes);
        glEnd();
    }
}
void batman(void)
{
    glClear(GL_COLOR_BUFFER_BIT);
    glPointSize(5);

    int sizes=25,blocks=17;
    int x=9*sizes,y=3*sizes;

    glColor3ub(0,0,0);
    d_line(x,y,sizes,blocks);

    x=9*sizes,y=4*sizes;
    blocks;

    for(int a=0;a<=5;a++)
    {
        glColor3ub(250,250,0);
        d_line(x,y,sizes,blocks);

        glColor3ub(0,0,0);
        d_line(x-sizes,y,sizes,1);

        d_line(x+(blocks*sizes),y,sizes,1);

         x=x-sizes;
         y=y+sizes;
         blocks+=2; //increase
    }
    x=3*sizes,y=10*sizes; //both side black line
    for (int a=0;a<7;a++)
    {
         glColor3ub(250,250,0);//middle part color
        d_line(x,y,sizes,29);//total block size vertical

        glColor3ub(0,0,0);
        d_line(x-sizes,y,sizes,1);

        glColor3ub(0,0,0);
        d_line(x+(29*sizes),y,sizes,1);

         y+=sizes;
    }
    x=4*sizes,y=17*sizes,blocks=27;

     for(int a=0;a<=5;a++) //top
    {
        glColor3ub(250,250,0);
        d_line(x,y,sizes,blocks);

        glColor3ub(0,0,0);
        d_line(x-sizes,y,sizes,1);

        d_line(x+(sizes*blocks),y,sizes,1);

         y=y+sizes;
         x=x+sizes;
         blocks-=2; //decress
}
         x=9*sizes;

        glColor3ub(0,0,0);
        d_line(x,y,sizes,blocks+2);

         x=4*sizes,y=11*sizes;
         blocks=5; //2nd codent top block

         for(int a=0;a<6;a++) //2nd codent block out
         {
             vertical_line(x,y,sizes,blocks); //1st
             x+=sizes;
             y-=sizes;
             blocks+=2;
         }
          blocks-=2;
          y=y+sizes;
          vertical_line(x,y,sizes,blocks);

          y=y-sizes;
          x=x+sizes;

          blocks=12;
          vertical_line(x,y,sizes,blocks);

          y=20*sizes;
          vertical_line(x,y,sizes,1);
          x=x+sizes;
          y=7*sizes;
          blocks=9;

          for(int a=0;a<2;a++) //middle batman top logo
         {
             vertical_line(x,y,sizes,blocks); //1st middle
             x=x+sizes;
             y=y+sizes;
             blocks--;
         }
         blocks++;
         vertical_line(x,y,sizes,blocks);

         x=x+sizes;
         y=y-sizes;
         blocks=14;
         vertical_line(x,y,sizes,blocks);

          x=x+sizes;
          y-=(2*sizes);
          blocks=15;
          vertical_line(x,y,sizes,blocks);

          x=x+sizes;
          y-=sizes;
          blocks=16;//midle block height
          vertical_line(x,y,sizes,blocks);

          x=x+sizes;
          y+=sizes;
          blocks=15;
        vertical_line(x,y,sizes,blocks);

          x=x+sizes;
          y+=(2*sizes);
          blocks=14; //bat middle logo righr
          vertical_line(x,y,sizes,blocks);

          y=6*sizes;
          x=24*sizes;
          blocks=16;

          for(int a=0;a<=6;a++)
         {
             vertical_line(x,y,sizes,blocks);//last right
             x=x+sizes;
             y=y+sizes;
             blocks-=2;
         }
          y=6*sizes;
          x=23*sizes;
          blocks=16; ////////////
          vertical_line(x,y,sizes,blocks);

          y=5*sizes;
          x=22*sizes;
          blocks=12;
          vertical_line(x,y,sizes,blocks);

          y=21*sizes;
          vertical_line(x,y,sizes,1);

          x=x-sizes;
          y-=(14*sizes);
          vertical_line(x,y,sizes,9);// |__|

         x=x-sizes;
         y=y+sizes;
         vertical_line(x,y,sizes,9);
          glFlush();
}
void Display (void) {
	glClear(GL_COLOR_BUFFER_BIT);
	glPointSize(4.0);        // Clear the color buffer (background)
	glFlush();  // Render now
}
void position(void) {
	glClearColor(.0f, 1.0f, 1.0f, 0.0f); // white and opaque
    gluOrtho2D(0.0,900.0,0.0,650.0);
}
/* Main function: GLUT runs as a console application starting at main()  */
int main(int argc, char** argv) {
	glutInit(&argc, argv);  // Initialize GLUT
    glutInitDisplayMode( GLUT_SINGLE | GLUT_RGB );
	glutInitWindowSize(900,700);   // Set the window's initial width & height
	glutInitWindowPosition(100,100);
	glutCreateWindow("Batman Logo");  // Create window with the given title
	glutDisplayFunc(Display);       // Register callback handler for window re-paint event
	glutDisplayFunc(batman);
	position();                       // Our own OpenGL initialization
	glutMainLoop();                 // Enter the event-processing loop
}
